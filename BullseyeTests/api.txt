[assembly: System.Runtime.Versioning.TargetFrameworkAttribute(".NETStandard,Version=v2.0", FrameworkDisplayName="")]
namespace Bullseye
{
    public interface IBuildContext
    {
        System.Collections.Generic.Dictionary<string, object> Items { get; }
    }
    public class static Targets
    {
        public static string[] DependsOn(params string[] dependencies) { }
        public static TInput[] ForEach<TInput>(params TInput[] inputs) { }
        public static void RunTargetsAndExit(System.Collections.Generic.IEnumerable<string> args, System.Func<System.Exception, bool> messageOnly = null, string logPrefix = null) { }
        public static System.Threading.Tasks.Task RunTargetsAndExitAsync(System.Collections.Generic.IEnumerable<string> args, System.Func<System.Exception, bool> messageOnly = null, string logPrefix = null, Bullseye.IBuildContext context = null) { }
        public static void RunTargetsWithoutExiting(System.Collections.Generic.IEnumerable<string> args, System.Func<System.Exception, bool> messageOnly = null, string logPrefix = null, Bullseye.IBuildContext context = null) { }
        public static System.Threading.Tasks.Task RunTargetsWithoutExitingAsync(System.Collections.Generic.IEnumerable<string> args, System.Func<System.Exception, bool> messageOnly = null, string logPrefix = null, Bullseye.IBuildContext context = null) { }
        public static void Target(string name, System.Collections.Generic.IEnumerable<string> dependsOn) { }
        public static void Target(string name, System.Collections.Generic.IEnumerable<string> dependsOn, Bullseye.IBuildContext context) { }
        public static void Target(string name, System.Collections.Generic.IEnumerable<string> dependsOn, System.Func<System.Threading.Tasks.Task> action) { }
        public static void Target(string name, System.Collections.Generic.IEnumerable<string> dependsOn, System.Func<Bullseye.IBuildContext, System.Threading.Tasks.Task> action) { }
        public static void Target(string name, System.Collections.Generic.IEnumerable<string> dependsOn, System.Func<Bullseye.IBuildContext, System.Threading.Tasks.Task> action, Bullseye.IBuildContext context) { }
        public static void Target<TInput>(string name, System.Collections.Generic.IEnumerable<string> dependsOn, System.Collections.Generic.IEnumerable<TInput> forEach, System.Func<TInput, System.Threading.Tasks.Task> action) { }
        public static void Target<TInput>(string name, System.Collections.Generic.IEnumerable<string> dependsOn, System.Collections.Generic.IEnumerable<TInput> forEach, System.Func<TInput, Bullseye.IBuildContext, System.Threading.Tasks.Task> action, Bullseye.IBuildContext context) { }
        public static void Target(string name, System.Func<System.Threading.Tasks.Task> action) { }
        public static void Target(string name, System.Func<Bullseye.IBuildContext, System.Threading.Tasks.Task> action, Bullseye.IBuildContext context) { }
        public static void Target(string name, System.Action action) { }
        public static void Target(string name, System.Action<Bullseye.IBuildContext> action, Bullseye.IBuildContext context = null) { }
        public static void Target<TInput>(string name, System.Collections.Generic.IEnumerable<TInput> forEach, System.Func<TInput, System.Threading.Tasks.Task> action) { }
        public static void Target<TInput>(string name, System.Collections.Generic.IEnumerable<TInput> forEach, System.Func<TInput, Bullseye.IBuildContext, System.Threading.Tasks.Task> action, Bullseye.IBuildContext context) { }
        public static void Target<TInput>(string name, System.Collections.Generic.IEnumerable<TInput> forEach, System.Action<TInput> action) { }
        public static void Target<TInput>(string name, System.Collections.Generic.IEnumerable<TInput> forEach, System.Action<TInput, Bullseye.IBuildContext> action, Bullseye.IBuildContext context) { }
        public static void Target(string name, System.Collections.Generic.IEnumerable<string> dependsOn, System.Action action) { }
        public static void Target<TDummy>(string name, System.Collections.Generic.IEnumerable<string> dependsOn, System.Action<Bullseye.IBuildContext> action) { }
        public static void Target(string name, System.Collections.Generic.IEnumerable<string> dependsOn, System.Action<Bullseye.IBuildContext> action, Bullseye.IBuildContext context) { }
        public static void Target<TInput>(string name, System.Collections.Generic.IEnumerable<string> dependsOn, System.Collections.Generic.IEnumerable<TInput> forEach, System.Action<TInput> action) { }
        public static void Target<TInput>(string name, System.Collections.Generic.IEnumerable<string> dependsOn, System.Collections.Generic.IEnumerable<TInput> forEach, System.Action<TInput, Bullseye.IBuildContext> action, Bullseye.IBuildContext context) { }
    }
}